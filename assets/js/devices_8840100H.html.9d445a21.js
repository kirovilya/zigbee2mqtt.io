"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[67765],{63521:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>r,data:()=>n});var o=t(9588);const i={},r=(0,t(23762).A)(i,[["render",function(e,a){const t=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[a[8]||(a[8]=(0,o.Lk)("h1",{id:"waxman-8840100h",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#waxman-8840100h"},[(0,o.Lk)("span",null,"Waxman 8840100H")])],-1)),(0,o.Lk)("table",null,[a[6]||(a[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[a[2]||(a[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"8840100H")],-1)),(0,o.Lk)("tr",null,[a[1]||(a[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(t,{to:"/supported-devices/#v=Waxman"},{default:(0,o.k6)(()=>[...a[0]||(a[0]=[(0,o.eW)("Waxman",-1)])]),_:1})])]),a[3]||(a[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"leakSMART water sensor v2")],-1)),a[4]||(a[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"battery, temperature, water_leak")],-1)),a[5]||(a[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/8840100H.png",alt:"Waxman 8840100H"})])],-1))])]),a[9]||(a[9]=(0,o.Lk)("h2",{id:"options",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#options"},[(0,o.Lk)("span",null,"Options")])],-1)),(0,o.Lk)("p",null,[(0,o.Lk)("em",null,[(0,o.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,o.k6)(()=>[...a[7]||(a[7]=[(0,o.eW)("How to use device type specific configuration",-1)])]),_:1})])]),a[10]||(a[10]=(0,o.Fv)('<ul><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric"><span>Temperature (numeric)</span></a></h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Â°C</code>.</p><h3 id="water-leak-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-binary"><span>Water leak (binary)</span></a></h3><p>Indicates whether the device detected a water leak. Value can be found in the published state on the <code>water_leak</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak is ON, if <code>false</code> OFF.</p>',8))])}]]),n=JSON.parse('{"path":"/devices/8840100H.html","title":"Waxman 8840100H control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Waxman 8840100H control via MQTT","description":"Integrate your Waxman 8840100H via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-05-19T20:48:40.000Z"},"git":{"updatedTime":1759244299000,"contributors":[{"name":"Ilya Kirov","username":"","email":"kirovilya@gmail.com","commits":1}],"changelog":[{"hash":"cd5293d618f5a2d8698124933adc3eb402d8b183","time":1759244299000,"email":"kirovilya@gmail.com","author":"Ilya Kirov","message":"Update Aqara W600 image"}]},"filePathRelative":"devices/8840100H.md"}')}}]);